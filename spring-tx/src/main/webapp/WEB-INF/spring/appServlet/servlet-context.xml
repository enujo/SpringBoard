<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.tistory.luahius" />
	<!-- DB연결 후 커넥션풀을 생성 -->
    <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
       <beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
       <beans:property name="url" value="jdbc:mysql://127.0.0.1:3306/jjdev" />
       <beans:property name="username" value="root" />
       <beans:property name="password" value="java0000" />
    </beans:bean>
    
    <!-- connection이 가진 tx기능을 spring jdbc에게 위임 -->
    <beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       <beans:property name="dataSource" ref="dataSource" />
    </beans:bean>
    
    <tx:annotation-driven />
    
    <!-- 스프링이 가로채 인터페이스를 만들어 인터페이스를 구현한 클래스를 만든다 
    proxy 는 무언가를 가로채는 것/ 인터페이스를 쓸것이면 추가 안해도 되고 안쓸거면 써야댄다-->
	<tx:annotation-driven proxy-target-class="true"/>
	
	 <!-- mybatis 세션생성을 위한 팩토리 생성 -->
    <beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- mybatis 세션생성시 사용할 dataSource주입 -->
        <beans:property name="dataSource" ref="dataSource" />
        <!-- mybatis 세션생성후 쿼리를 실행시킬때 사용할 쿼리위치(메퍼)설정 -->
        <beans:property name="mapperLocations">
            <beans:list>
                <beans:value>classpath:com/tistory/luahius/SampleMapper.xml</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>
    <!-- mybatis를 사용하여 db에접속하여 쿼리를 보내는 주체인 SqlSessionTemplate빈 생성 sessiontemplate 가 없으면 factory에서 get해서 가져오면 된다-->
    <beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <beans:constructor-arg index="0" ref="sqlSessionFactory" />
    </beans:bean>
	
</beans:beans>
